<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>ICSharpCode.SharpZipLib.Tar Namespace</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="ICSharpCode.SharpZipLib.Tar namespace" /><meta name="Microsoft.Help.F1" content="ICSharpCode.SharpZipLib.Tar" /><meta name="Microsoft.Help.Id" content="N:ICSharpCode.SharpZipLib.Tar" /><meta name="Description" content="Tape Archive handling" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="ICSharpCode.SharpZipLib.Tar" /><meta name="file" content="N_ICSharpCode_SharpZipLib_Tar" /><meta name="guid" content="N_ICSharpCode_SharpZipLib_Tar" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">ICSharpCode.SharpZipLib Compression Library<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_ICSharpCode_SharpZipLib.htm" title="ICSharpCode.SharpZipLib Compression Library" tocid="roottoc">ICSharpCode.SharpZipLib Compression Library</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_ICSharpCode_SharpZipLib_Tar.htm" title="ICSharpCode.SharpZipLib.Tar" tocid="N_ICSharpCode_SharpZipLib_Tar">ICSharpCode.SharpZipLib.Tar</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_ICSharpCode_SharpZipLib_Tar_InvalidHeaderException.htm" title="InvalidHeaderException Class" tocid="T_ICSharpCode_SharpZipLib_Tar_InvalidHeaderException">InvalidHeaderException Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="T_ICSharpCode_SharpZipLib_Tar_ProgressMessageHandler.htm" title="ProgressMessageHandler Delegate" tocid="T_ICSharpCode_SharpZipLib_Tar_ProgressMessageHandler">ProgressMessageHandler Delegate</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_ICSharpCode_SharpZipLib_Tar_TarArchive.htm" title="TarArchive Class" tocid="T_ICSharpCode_SharpZipLib_Tar_TarArchive">TarArchive Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_ICSharpCode_SharpZipLib_Tar_TarBuffer.htm" title="TarBuffer Class" tocid="T_ICSharpCode_SharpZipLib_Tar_TarBuffer">TarBuffer Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_ICSharpCode_SharpZipLib_Tar_TarEntry.htm" title="TarEntry Class" tocid="T_ICSharpCode_SharpZipLib_Tar_TarEntry">TarEntry Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_ICSharpCode_SharpZipLib_Tar_TarException.htm" title="TarException Class" tocid="T_ICSharpCode_SharpZipLib_Tar_TarException">TarException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_ICSharpCode_SharpZipLib_Tar_TarHeader.htm" title="TarHeader Class" tocid="T_ICSharpCode_SharpZipLib_Tar_TarHeader">TarHeader Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_ICSharpCode_SharpZipLib_Tar_TarInputStream.htm" title="TarInputStream Class" tocid="T_ICSharpCode_SharpZipLib_Tar_TarInputStream">TarInputStream Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_ICSharpCode_SharpZipLib_Tar_TarInputStream_EntryFactoryAdapter.htm" title="TarInputStream.EntryFactoryAdapter Class" tocid="T_ICSharpCode_SharpZipLib_Tar_TarInputStream_EntryFactoryAdapter">TarInputStream.EntryFactoryAdapter Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_ICSharpCode_SharpZipLib_Tar_TarInputStream_IEntryFactory.htm" title="TarInputStream.IEntryFactory Interface" tocid="T_ICSharpCode_SharpZipLib_Tar_TarInputStream_IEntryFactory">TarInputStream.IEntryFactory Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_ICSharpCode_SharpZipLib_Tar_TarOutputStream.htm" title="TarOutputStream Class" tocid="T_ICSharpCode_SharpZipLib_Tar_TarOutputStream">TarOutputStream Class</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">ICSharpCode.SharpZipLib.Tar Namespace</td></tr></table><span class="introStyle"></span><div class="summary">Tape Archive handling</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Classes</span></div><div id="ID0RBSection" class="collapsibleSection"><table id="typeList" class="members"><tr><th class="iconColumn">
					 
				</th><th>Class</th><th>Description</th></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_ICSharpCode_SharpZipLib_Tar_InvalidHeaderException.htm">InvalidHeaderException</a></td><td><div class="summary">
            This exception is used to indicate that there is a problem
            with a TAR archive header.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_ICSharpCode_SharpZipLib_Tar_TarArchive.htm">TarArchive</a></td><td><div class="summary">
            The TarArchive class implements the concept of a
            'Tape Archive'. A tar archive is a series of entries, each of
            which represents a file system object. Each entry in
            the archive consists of a header block followed by 0 or more data blocks.
            Directory entries consist only of the header block, and are followed by entries
            for the directory's contents. File entries consist of a
            header followed by the number of blocks needed to
            contain the file's contents. All entries are written on
            block boundaries. Blocks are 512 bytes long.
            
            TarArchives are instantiated in either read or write mode,
            based upon whether they are instantiated with an InputStream
            or an OutputStream. Once instantiated TarArchives read/write
            mode can not be changed.
            
            There is currently no support for random access to tar archives.
            However, it seems that subclassing TarArchive, and using the
            TarBuffer.CurrentRecord and TarBuffer.CurrentBlock
            properties, this would be rather trivial.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_ICSharpCode_SharpZipLib_Tar_TarBuffer.htm">TarBuffer</a></td><td><div class="summary">
            The TarBuffer class implements the tar archive concept
            of a buffered input stream. This concept goes back to the
            days of blocked tape drives and special io devices. In the
            C# universe, the only real function that this class
            performs is to ensure that files have the correct "record"
            size, or other tars will complain.
            <p>
            You should never have a need to access this class directly.
            TarBuffers are created by Tar IO Streams.
            </p></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_ICSharpCode_SharpZipLib_Tar_TarEntry.htm">TarEntry</a></td><td><div class="summary">
            This class represents an entry in a Tar archive. It consists
            of the entry's header, as well as the entry's File. Entries
            can be instantiated in one of three ways, depending on how
            they are to be used.
            <p>
            TarEntries that are created from the header bytes read from
            an archive are instantiated with the TarEntry( byte[] )
            constructor. These entries will be used when extracting from
            or listing the contents of an archive. These entries have their
            header filled in using the header bytes. They also set the File
            to null, since they reference an archive entry not a file.</p><p>
            TarEntries that are created from files that are to be written
            into an archive are instantiated with the CreateEntryFromFile(string)
            pseudo constructor. These entries have their header filled in using
            the File's information. They also keep a reference to the File
            for convenience when writing entries.</p><p>
            Finally, TarEntries can be constructed from nothing but a name.
            This allows the programmer to construct the entry by hand, for
            instance when only an InputStream is available for writing to
            the archive, and the header information is constructed from
            other information. In this case the header fields are set to
            defaults and the File is set to null.</p><a href="P_ICSharpCode_SharpZipLib_Tar_TarEntry_TarHeader.htm">TarHeader</a></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_ICSharpCode_SharpZipLib_Tar_TarException.htm">TarException</a></td><td><div class="summary">
            TarExceptions are used for exceptions specific to tar classes and code.	
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_ICSharpCode_SharpZipLib_Tar_TarHeader.htm">TarHeader</a></td><td><div class="summary">
            This class encapsulates the Tar Entry Header used in Tar Archives.
            The class also holds a number of tar constants, used mostly in headers.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_ICSharpCode_SharpZipLib_Tar_TarInputStream.htm">TarInputStream</a></td><td><div class="summary">
            The TarInputStream reads a UNIX tar archive as an InputStream.
            methods are provided to position at each successive entry in
            the archive, and the read each entry as a normal input stream
            using read().
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_ICSharpCode_SharpZipLib_Tar_TarInputStream_EntryFactoryAdapter.htm">TarInputStream<span id="LSTE16130A6_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE16130A6_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>EntryFactoryAdapter</a></td><td><div class="summary">
            Standard entry factory class creating instances of the class TarEntry
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_ICSharpCode_SharpZipLib_Tar_TarOutputStream.htm">TarOutputStream</a></td><td><div class="summary">
            The TarOutputStream writes a UNIX tar archive as an OutputStream.
            Methods are provided to put entries, and then write their contents
            by writing to this stream using write().
            </div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Interfaces</span></div><div id="ID1RBSection" class="collapsibleSection"><table id="typeList" class="members"><tr><th class="iconColumn">
					 
				</th><th>Interface</th><th>Description</th></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_ICSharpCode_SharpZipLib_Tar_TarInputStream_IEntryFactory.htm">TarInputStream<span id="LSTE16130A6_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE16130A6_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IEntryFactory</a></td><td><div class="summary">
            This interface is provided, along with the method <a href="M_ICSharpCode_SharpZipLib_Tar_TarInputStream_SetEntryFactory.htm">SetEntryFactory(TarInputStream<span id="LSTE16130A6_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE16130A6_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IEntryFactory)</a>, to allow
            the programmer to have their own <a href="T_ICSharpCode_SharpZipLib_Tar_TarEntry.htm">TarEntry</a> subclass instantiated for the
            entries return from <a href="M_ICSharpCode_SharpZipLib_Tar_TarInputStream_GetNextEntry.htm">GetNextEntry<span id="LSTE16130A6_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE16130A6_3?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>.
            </div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Delegates</span></div><div id="ID2RBSection" class="collapsibleSection"><table id="typeList" class="members"><tr><th class="iconColumn">
					 
				</th><th>Delegate</th><th>Description</th></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" alt="Public delegate" title="Public delegate" /></td><td><a href="T_ICSharpCode_SharpZipLib_Tar_ProgressMessageHandler.htm">ProgressMessageHandler</a></td><td><div class="summary">
            Used to advise clients of 'events' while processing archives
            </div></td></tr></table></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>